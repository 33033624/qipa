基本思路
最好的方式是采用cavas的方式进行页面的绘制  但是由于cavas存在不兼容等问题 并且由于这类棋牌游戏同样在中老年很受欢迎 所以我们采用最基本的布局


下面是我做的5子棋项目中的思路  但是由于时间原因只是尽力实现了单屏幕的对战

首先创建一个棋盘 并且棋盘的可放置旗子位置都会存放到模块的全局数组中 可以随时调用
并且我们会创建两个数组 用来分别记录黑白选手的放置顺序和位置这完全是为了实现重放功能和后面进行判断的调用

创建一个方法 是用来添加棋子的  当点击棋盘的时候 会根据位置向最近的区域动态创建一个标签用来显示给用户  并且存在一个交互变化的变量，通过判断这个变量的值 来判断是黑选手还是白选手  进而将我们对应的位置信息和棋子信息放入全局的分别的数组中

实现悔棋和重玩的功能
每一次下完棋就会在将某一变量成我们对应的棋子颜色  如果点击悔棋 那么会默认的将我们刚才的选手的棋子删除掉（当然这一步没有完全考虑全面 还存在就是另外一个人下载完棋子 我在悔棋的可能  但是我的项目中没有实现这个功能），重玩就会立刻刷新全局变量 并且把我们之前动态创建的标签全部取消掉

判断胜负 创建四个方法进行逐级判断
在我们的位置信息中 存在两个数组 分别记录黑白两方的棋子的顺序和位置  没下完一次琪就会立刻执行遍历操作 判断是否为x周方向成立或者y方向成立或者leftY方向成立 或者rightY方向成立  如果存在一个成立那么弹出 对应的棋子颜色的选手取胜

上面的方法基本实现了但屏幕的对战  那么实现双屏对战的方式就是在我们上面的基础上 添加一个时时对话的功能 也就是我们常用的socket.io  是前后端一起使用的一个插件  来解决时时通话的功能的   就是我们两个人进入同一个房间进行操作  那么第一个的操作会将信息发送给服务器  服务器就会立刻使另外一个人的屏幕进行刷新  在这个过程中我们需要区分开  每个人不能再另一个人点击之前再次点击 对于每一个人的信息传递需要将对应的棋子黑白信息以及位置信息进行传递




